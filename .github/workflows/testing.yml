name: Testing

on: pull_request

jobs:
  testing:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Installing packages
      run: |
        brew install libtool automake cmake carthage go@1.14 swiftformat libssh2
        brew reinstall openssl
        brew install swiftlint || brew link --overwrite swiftlint
        gem install bundler
    - uses: actions/cache@v2
      id: carthage-cache
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-${{ secrets.CACHE_VERSION }}-
    - uses: actions/cache@v2
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-${{ secrets.CACHE_VERSION }}-
    - uses: actions/cache@v2
      id: gopenpgp-cache
      with:
        path: go
        key: ${{ runner.os }}-gopenpgp-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/gopenpgp_build.sh') }}
        restore-keys: |
          ${{ runner.os }}-gopenpgp-${{ secrets.CACHE_VERSION }}-
    - name: Bundle Install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Cocoapods
      run: bundle exec pod install
    - name: Carthage
      if: steps.carthage-cache.outputs.cache-hit != 'true'
      run: |
        export PATH="/usr/local/Cellar/openssl@1.1/1.1.1k/bin:$PATH"
        export PKG_CONFIG_PATH="/usr/local/Cellar/openssl@1.1/1.1.1k/lib/pkgconfig:/usr/local/opt/libssh2/lib/pkgconfig/"
        export LDFLAGS="-L/usr/local/Cellar/openssl@1.1/1.1.1k/lib"
        export CPPFLAGS="-I/usr/local/Cellar/openssl@1.1/1.1.1k/include"
        ./scripts/wcarthage bootstrap --platform iOS --no-use-binaries --cache-builds --verbose || cat /Users/runner/work/passforios/passforios/Carthage/Checkouts/objective-git/External/build/log/libssh2-x86_64.log
    - name: GopenPGP
      if: steps.gopenpgp-cache.outputs.cache-hit != 'true'
      run: |
        export PATH="/usr/local/opt/go@1.14/bin:$PATH"
        ./scripts/gopenpgp_build.sh
    - name: Testing
      run: bundle exec fastlane test
